// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`/test/parser.test.ts should fix issue#2286 with array example 1`] = `
{
  "components": {
    "schemas": {
      "Cat": {
        "properties": {
          "catds": {
            "description": "The breed of the Cat",
            "items": {
              "$ref": "#/components/schemas/Catd",
            },
            "type": "array",
          },
          "name": {
            "description": "The name of the Cat",
            "example": "Kitty",
            "format": undefined,
            "type": "string",
          },
        },
        "type": "object",
      },
      "Catd": {
        "properties": {
          "aged": {
            "description": "The age of the Cat",
            "example": 1,
            "format": undefined,
            "type": "number",
          },
          "breedd": {
            "description": "The breed of the Cat",
            "example": "Maine Coon",
            "format": undefined,
            "type": "string",
          },
          "named": {
            "description": "The name of the Cat",
            "example": "Kitty",
            "format": undefined,
            "type": "string",
          },
        },
        "type": "object",
      },
    },
  },
  "info": {
    "contact": {},
    "description": "",
    "title": "",
    "version": "1.0.0",
  },
  "openapi": "3.0.1",
  "paths": {
    "/api/update_user": {
      "post": {
        "description": undefined,
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Cat",
                },
              },
            },
            "description": "The found record",
          },
        },
        "summary": undefined,
        "tags": [
          "api",
        ],
      },
    },
  },
  "servers": [],
  "tags": [
    {
      "description": "api",
      "externalDocs": undefined,
      "name": "api",
    },
  ],
}
`;

exports[`/test/parser.test.ts should test ref path generate 1`] = `
{
  "components": {
    "schemas": {
      "NotificationDTO": {
        "properties": {
          "id": {
            "description": "这是 id",
            "example": "1",
            "format": undefined,
            "type": "number",
          },
          "title": {
            "description": "title",
            "example": "通知标题",
            "format": undefined,
            "type": "string",
          },
        },
        "type": "object",
      },
      "NotificationPageListDTO": {
        "properties": {
          "count": {
            "description": "通知数量",
            "example": "999",
            "format": undefined,
            "type": "number",
          },
          "rows": {
            "description": "列表数据",
            "items": {
              "$ref": "#/components/schemas/NotificationDTO",
            },
            "type": "array",
          },
        },
        "type": "object",
      },
      "UserDTO": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/NotificationPageListDTO",
            "description": "The uid of the user",
          },
          "name": {
            "description": "The name of the user",
            "example": "Kitty",
            "format": undefined,
            "type": "string",
          },
          "uid": {
            "description": "The uid of the user",
            "example": "1",
            "format": undefined,
            "type": "number",
          },
        },
        "type": "object",
      },
    },
  },
  "info": {
    "contact": {},
    "description": "",
    "title": "",
    "version": "1.0.0",
  },
  "openapi": "3.0.1",
  "paths": {
    "/api/update_user": {
      "post": {
        "description": undefined,
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserDTO",
                },
              },
            },
            "description": "The found record",
          },
        },
        "summary": undefined,
        "tags": [
          "api",
        ],
      },
    },
  },
  "servers": [],
  "tags": [
    {
      "description": "api",
      "externalDocs": undefined,
      "name": "api",
    },
  ],
}
`;

exports[`/test/parser.test.ts should test simple case with example 1`] = `
{
  "components": {
    "schemas": {
      "Cat": {
        "properties": {
          "name": {
            "description": "The name of the Cat",
            "example": "Kitty",
            "format": undefined,
            "type": "string",
          },
        },
        "type": "object",
      },
    },
  },
  "info": {
    "contact": {},
    "description": "",
    "title": "",
    "version": "1.0.0",
  },
  "openapi": "3.0.1",
  "paths": {
    "/api/update_user": {
      "post": {
        "description": undefined,
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Cat",
                },
              },
            },
            "description": "The found record",
          },
        },
        "summary": undefined,
        "tags": [
          "api",
        ],
      },
    },
  },
  "servers": [],
  "tags": [
    {
      "description": "api",
      "externalDocs": undefined,
      "name": "api",
    },
  ],
}
`;

exports[`/test/parser.test.ts should test specify type 1`] = `
{
  "properties": {
    "id": {
      "format": undefined,
      "type": "string",
    },
  },
  "type": "object",
}
`;
