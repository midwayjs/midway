"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[72454],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>g});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var p=a.createContext({}),s=function(e){var t=a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},d=function(e){var t=s(e.components);return a.createElement(p.Provider,{value:t},e.children)},u="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,p=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),u=s(n),m=r,g=u["".concat(p,".").concat(m)]||u[m]||c[m]||i;return n?a.createElement(g,o(o({ref:t},d),{},{components:n})):a.createElement(g,o({ref:t},d))}));function g(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,o=new Array(i);o[0]=m;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l[u]="string"==typeof e?e:r,o[1]=l;for(var s=2;s<i;s++)o[s]=n[s];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},5210:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>o,default:()=>c,frontMatter:()=>i,metadata:()=>l,toc:()=>s});var a=n(87462),r=(n(67294),n(3905));const i={},o="Swagger",l={unversionedId:"extensions/swagger",id:"extensions/swagger",title:"Swagger",description:"Based on the latest OpenAPI 3.0.3, the new version of Swagger components is implemented.",source:"@site/i18n/en/docusaurus-plugin-content-docs/current/extensions/swagger.md",sourceDirName:"extensions",slug:"/extensions/swagger",permalink:"/en/docs/extensions/swagger",draft:!1,editUrl:"https://github.com/midwayjs/midway/tree/main/site/docs/extensions/swagger.md",tags:[],version:"current",frontMatter:{},sidebar:"component",previous:{title:"Parameter verification",permalink:"/en/docs/extensions/validate"},next:{title:"Task Queues",permalink:"/en/docs/extensions/bull"}},p={},s=[{value:"Installation dependency",id:"installation-dependency",level:2},{value:"Open the component",id:"open-the-component",level:2},{value:"Data type",id:"data-type",level:2},{value:"Automatic type extraction",id:"automatic-type-extraction",level:3},{value:"Types and schema",id:"types-and-schema",level:3},{value:"Base type",id:"base-type",level:3},{value:"Array type",id:"array-type",level:3},{value:"Enumeration type",id:"enumeration-type",level:3},{value:"Complex object types",id:"complex-object-types",level:3},{value:"Complex object array type",id:"complex-object-array-type",level:3},{value:"Circular dependencies",id:"circular-dependencies",level:3},{value:"Request definition",id:"request-definition",level:2},{value:"Query definition",id:"query-definition",level:3},{value:"Body definition",id:"body-definition",level:3},{value:"File upload definition",id:"file-upload-definition",level:3},{value:"Request Header",id:"request-header",level:3},{value:"Request Response",id:"request-response",level:3},{value:"Generic returns data",id:"generic-returns-data",level:3},{value:"More definition examples",id:"more-definition-examples",level:2},{value:"Advanced usage",id:"advanced-usage",level:2},{value:"Routing label",id:"routing-label",level:3},{value:"Authorization verification",id:"authorization-verification",level:3},{value:"basic",id:"basic",level:4},{value:"<strong>bearer</strong>",id:"bearer",level:4},{value:"oauth2",id:"oauth2",level:4},{value:"cookie",id:"cookie",level:4},{value:"apikey",id:"apikey",level:4},{value:"custom verification",id:"custom-verification",level:4},{value:"Ignore routing verification",id:"ignore-routing-verification",level:3},{value:"Ignore routing",id:"ignore-routing",level:3},{value:"Parameter configuration",id:"parameter-configuration",level:2},{value:"Decorator list",id:"decorator-list",level:2},{value:"UI rendering",id:"ui-rendering",level:2},{value:"Rendering from Swagger-ui-dist",id:"rendering-from-swagger-ui-dist",level:3},{value:"Rendering from CDN addresses such as unpkg",id:"rendering-from-cdn-addresses-such-as-unpkg",level:3},{value:"Only Swagger JSON is provided",id:"only-swagger-json-is-provided",level:3},{value:"Frequently Asked Questions",id:"frequently-asked-questions",level:2},{value:"<code>summary</code> or <code>description</code> in route annotations such as <code>@Get</code> do not take effect",id:"summary-or-description-in-route-annotations-such-as-get-do-not-take-effect",level:3}],d={toc:s},u="wrapper";function c(e){let{components:t,...n}=e;return(0,r.kt)(u,(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"swagger"},"Swagger"),(0,r.kt)("p",null,"Based on the latest ",(0,r.kt)("a",{parentName:"p",href:"https://swagger.io/specification/"},"OpenAPI 3.0.3"),", the new version of Swagger components is implemented."),(0,r.kt)("p",null,"Related information:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:null}))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Can be used for standard projects"),(0,r.kt)("td",{parentName:"tr",align:null},"\u2705")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Can be used for Serverless"),(0,r.kt)("td",{parentName:"tr",align:null},"\u274c")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Can be used for integration"),(0,r.kt)("td",{parentName:"tr",align:null},"\u274c")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Contains independent main framework"),(0,r.kt)("td",{parentName:"tr",align:null},"\u274c")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Contains independent logs"),(0,r.kt)("td",{parentName:"tr",align:null},"\u274c")))),(0,r.kt)("h2",{id:"installation-dependency"},"Installation dependency"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"$ npm install @midwayjs/swagger@3 --save\n$ npm install swagger-ui-dist --save-dev\n")),(0,r.kt)("p",null,"If you want to output Swagger API pages on the server, you need to install the swagger-ui-dist into the dependency."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"$ npm install swagger-ui-dist --save\n")),(0,r.kt)("p",null,"Or reinstall the following dependencies in ",(0,r.kt)("inlineCode",{parentName:"p"},"package.json"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "dependencies": {\n    "@midwayjs/swagger": "^3.0.0",\n    // If you want to use it on the server\n    "swagger-ui-dist": "4.2.1",\n    // ...\n  },\n  "devDependencies": {\n    // If you don\'t want to use it on the server\n    "swagger-ui-dist": "4.2.1",\n    // ...\n  }\n}\n')),(0,r.kt)("h2",{id:"open-the-component"},"Open the component"),(0,r.kt)("p",null,"Add components to ",(0,r.kt)("inlineCode",{parentName:"p"},"configuration.ts"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"import { Configuration } from '@midwayjs/core';\nimport * as swagger from '@midwayjs/swagger';\n\n@Configuration({\n  imports: [\n    // ...\n    swagger\n  ]\n})\nexport class MainConfiguration {\n\n}\n")),(0,r.kt)("p",null,'You can configure the enabled environment, for example, the following code refers to "only enabled in local environment".'),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"import { Configuration } from '@midwayjs/core';\nimport * as swagger from '@midwayjs/swagger';\n\n@Configuration({\n  imports: [\n    // ...\n    {\n      component: swagger\n      enabledEnvironment: ['local']\n    }\n  ]\n})\nexport class MainConfiguration {\n\n}\n")),(0,r.kt)("p",null,"Then start the project and access the address:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"UI: ",(0,r.kt)("a",{parentName:"li",href:"http://127.0.0.1:7001/swagger-ui/index.html"},"http://127.0.0.1:7001/swagger-ui/index.html")),(0,r.kt)("li",{parentName:"ul"},"JSON: ",(0,r.kt)("a",{parentName:"li",href:"http://127.0.0.1:7001/swagger-ui/index.json"},"http://127.0.0.1:7001/swagger-ui/index.json"))),(0,r.kt)("p",null,"The path can be configured by ",(0,r.kt)("inlineCode",{parentName:"p"},"swaggerPath")," parameters."),(0,r.kt)("h2",{id:"data-type"},"Data type"),(0,r.kt)("h3",{id:"automatic-type-extraction"},"Automatic type extraction"),(0,r.kt)("p",null,"The Swagger component identifies the ",(0,r.kt)("inlineCode",{parentName:"p"},"@Body()"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"@Query()"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"@Param()")," decorators for each routing method in each ",(0,r.kt)("inlineCode",{parentName:"p"},"@Controller")," and extracts routing method parameters and types."),(0,r.kt)("p",null,"For example, the following code:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"@Get('/')\nasync home (\n  @Query('uid') uid: number\n  @Query('tid') tid: string\n  @Query('isBoolean') isBoolean: boolean\n) {\n    // ...\n}\n")),(0,r.kt)("p",null,"The basic Boolean, string, and numeric types are displayed as follows:"),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"https://img.alicdn.com/imgextra/i2/O1CN01KGk0B325xe6cV5HCo_!!6000000007593-2-tps-1110-854.png",alt:null})),(0,r.kt)("h3",{id:"types-and-schema"},"Types and schema"),(0,r.kt)("p",null,"We often use objects in parameters and use defined classes as types. At this time, swagger components can also be automatically identified, and can also be combined with common types for identification."),(0,r.kt)("p",null,"For example, the following code:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"@Post('/:id', { summary: 'test'})\nasync create(@Body() createCatDto: CreateCatDto, @Param('id') id: number) {\n  // ...\n}\n")),(0,r.kt)("p",null,"The definition of ",(0,r.kt)("inlineCode",{parentName:"p"},"CreateCatDto")," type is as follows. We use ",(0,r.kt)("inlineCode",{parentName:"p"},"ApiProperty")," to define each attribute."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"import { ApiProperty } from \"@midwayjs/swagger\";\n\nexport class CreateCatDto {\n  @ApiProperty({ example: 'Kitty', description: 'The name of the Catname'})\n  name: string;\n\n  @ApiProperty({ example: '1', description: 'The name of the Catage'})\n  age: number;\n\n  @ApiProperty({ example: 'bbbb', description: 'The name of the Catbreed'})\n  breed: string;\n}\n")),(0,r.kt)("p",null,"The effect is as follows. The component will automatically extract two of the parameters:"),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"https://img.alicdn.com/imgextra/i2/O1CN01qpyb7k1uheVEFq8CI_!!6000000006069-2-tps-1220-1046.png",alt:"swagger1"})),(0,r.kt)("p",null,"At the same time, since the example of each attribute is defined in the class, the sample value is automatically filled in."),(0,r.kt)("p",null,"In Swagger, each type will be described by a ",(0,r.kt)("inlineCode",{parentName:"p"},"Schema"),". We have already defined a ",(0,r.kt)("inlineCode",{parentName:"p"},"CreateCatDto")," Schema, which looks like the following."),(0,r.kt)("p",null,"Note that we will reuse these Schemas."),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"https://img.alicdn.com/imgextra/i2/O1CN01iZYONb1tAqW35GM3C_!!6000000005862-2-tps-1050-694.png",alt:"swagger2"})),(0,r.kt)("h3",{id:"base-type"},"Base type"),(0,r.kt)("p",null,"We can define common types by setting type in the ",(0,r.kt)("inlineCode",{parentName:"p"},"@ApiProperty(...)")," decorator."),(0,r.kt)("p",null,"In most cases, the underlying type can be automatically identified without explicitly declaring the ",(0,r.kt)("inlineCode",{parentName:"p"},"type"),"."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"String")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"@ApiProperty({\n  type: 'string',\n  // ...\n})\nname: string;\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Boolean")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"@ApiProperty({\n  type: 'boolean',\n  example: 'true',\n  // ...\n})\nisPure: boolean;\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Number Type")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"@ApiProperty({\n  type: 'number',\n  example: '1',\n  description: 'The name of the Catage'\n})\nage: number;\n")),(0,r.kt)("p",null,"In addition, you can also use the format field to define a more precise length."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"@ApiProperty({\n  type: 'integer',\n  format: 'int32',\n  example: '1',\n  description: 'The name of the Catage'\n})\nage: number;\n")),(0,r.kt)("h3",{id:"array-type"},"Array type"),(0,r.kt)("p",null,"If the array type is an array type, you can configure the type field and use the ",(0,r.kt)("inlineCode",{parentName:"p"},"type")," of the ",(0,r.kt)("inlineCode",{parentName:"p"},"items")," to specify the type."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"@ApiProperty({\n  type: 'array',\n  items: {\n    type: 'string',\n  },\n  example: ['1']\n  }\n})\nbreeds: string[];\n")),(0,r.kt)("h3",{id:"enumeration-type"},"Enumeration type"),(0,r.kt)("p",null,"If it is an enumeration type, it can be defined by configuring the enmu field."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"enum HelloWorld {\n  One = 'One',\n  Two = 'Two',\n  Three = 'Three',\n}\n\n@ApiProperty({\n  enum: ['One', 'Two', 'Three']\n  description: 'The name of the Catage'\n})\nhello: HelloWorld;\n")),(0,r.kt)("p",null,"If the field is at the top level, the display effect is as follows:"),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"https://img.alicdn.com/imgextra/i1/O1CN015M37MU1KgtdNfqsgp_!!6000000001194-0-tps-1406-426.jpg",alt:"swagger3"})),(0,r.kt)("h3",{id:"complex-object-types"},"Complex object types"),(0,r.kt)("p",null,"If the type of a property is an existing complex type, you can use the ",(0,r.kt)("inlineCode",{parentName:"p"},"type")," parameter to specify the complex type."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"export class Cat {\n  /**\n   * The name of the Catcomment\n   * @example Kitty\n   */\n  @ApiProperty({ example: 'Kitty', description: 'The name of the Cat'})\n  name: string;\n\n  @ApiProperty({ example: 1, description: 'The age of the Cat' })\n  age: number;\n\n  @ApiProperty({ example: '2022-12-12 11:11:11', description: 'The age of the CatDSate' })\n  agedata?: Date;\n\n  @ApiProperty({\n    example: 'Maine Coon',\n    description: 'The breed of the Cat',\n  })\n  breed: string;\n}\n\nexport class CreateCatDto {\n\n  // ...\n\n  @ApiProperty({\n    Type: Cat, // There is no need to specify example here.\n  })\n  related: Cat;\n}\n")),(0,r.kt)("p",null,"The effect is as follows:"),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"https://img.alicdn.com/imgextra/i3/O1CN01KADwTb1rkS4gJExuP_!!6000000005669-2-tps-1376-1070.png",alt:null})),(0,r.kt)("h3",{id:"complex-object-array-type"},"Complex object array type"),(0,r.kt)("p",null,"If the type of an attribute is a complex array type, the writing is slightly different."),(0,r.kt)("p",null,"Except that the ",(0,r.kt)("inlineCode",{parentName:"p"},"type")," is declared as ",(0,r.kt)("inlineCode",{parentName:"p"},"array"),", the ",(0,r.kt)("inlineCode",{parentName:"p"},"items")," property only supports strings. You must use the ",(0,r.kt)("inlineCode",{parentName:"p"},"getSchemaPath")," method to import a different type."),(0,r.kt)("p",null,"In addition, if the ",(0,r.kt)("inlineCode",{parentName:"p"},"Cat")," type has not been declared in the ",(0,r.kt)("inlineCode",{parentName:"p"},"type")," field of other attributes, you need to use the ",(0,r.kt)("inlineCode",{parentName:"p"},"@ApiExtraModel")," decorator to declare additional external types."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"import { ApiProperty, getSchemaPath, ApiExtraModel } from '@midwayjs/swagger';\n\nclass Cat {\n  // ...\n}\n\n@ApiExtraModel(Cat)\nexport class CreateCatDto {\n  // ...\n\n  @ApiProperty({\n    type: 'array',\n    items: {\n      $ref: getSchemaPath(Cat)\n    }\n  })\n  relatedList: Cat[];\n}\n\n\n")),(0,r.kt)("p",null,"The effect is as follows:"),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"https://img.alicdn.com/imgextra/i1/O1CN01h4sQJ41dP0uq4fgi7_!!6000000003727-2-tps-1332-666.png",alt:null})),(0,r.kt)("h3",{id:"circular-dependencies"},"Circular dependencies"),(0,r.kt)("p",null,"When you have circular dependencies between classes, use lazy functions to provide type information."),(0,r.kt)("p",null,"For example looping over the ",(0,r.kt)("inlineCode",{parentName:"p"},"type")," field."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"class Photo {\n  // ...\n  @ApiProperty({\n    type: () => Album\n  })\n  album: Album;\n}\nclass Album {\n  // ...\n  @ApiProperty({\n    type: () => Photo\n  })\n  photo: Photo;\n}\n")),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"getSchemaPath")," can also be used."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"export class CreateCatDto {\n  // ...\n\n  @ApiProperty({\n    type: 'array',\n    items: {\n      $ref: () => getSchemaPath(Cat)\n    }\n  })\n  relatedList: Cat[];\n}\n")),(0,r.kt)("h2",{id:"request-definition"},"Request definition"),(0,r.kt)("p",null,"The paths defined by the ",(0,r.kt)("a",{parentName:"p",href:"https://swagger.io/specification/"},"OpenAPI")," are each routing path, and each routing path has the definition of HTTP methods, such as GET, POST, DELETE, PUT, etc."),(0,r.kt)("h3",{id:"query-definition"},"Query definition"),(0,r.kt)("p",null,"Use ",(0,r.kt)("inlineCode",{parentName:"p"},"@ApiQuery")," to define Query data."),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"@Query")," decorator is automatically identified."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"@Get('/get_user')\nasync getUser(@Query('name') name: string) {\n  return 'hello';\n}\n")),(0,r.kt)("p",null,"If ",(0,r.kt)("inlineCode",{parentName:"p"},"@Query")," is in the form of an object, you need to specify a name parameter in ",(0,r.kt)("inlineCode",{parentName:"p"},"@ApiQuery"),", and the object type needs to be used with ",(0,r.kt)("inlineCode",{parentName:"p"},"@ApiProperty"),", otherwise the form will become read-only."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"export class UserDTO {\n  @ApiProperty()\n  name: string;\n}\n\n@Get('/get_user')\n@ApiQuery({\n  name: 'query'\n})\nasync getUser(@Query() dto: UserDTO) {\n  // ...\n}\n")),(0,r.kt)("h3",{id:"body-definition"},"Body definition"),(0,r.kt)("p",null,"Use ",(0,r.kt)("inlineCode",{parentName:"p"},"@ApiBody")," to define Body data."),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"@Body")," object type needs to be used with ",(0,r.kt)("inlineCode",{parentName:"p"},"@ApiProperty"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"export class UserDTO {\n  @ApiProperty()\n  name: string;\n}\n\n@Post('/update_user')\nasync upateUser(@Body() dto: UserDTO) {\n  // ...\n}\n")),(0,r.kt)("p",null,"For additional details, please use ",(0,r.kt)("inlineCode",{parentName:"p"},"@ApiBody")," enhancement."),(0,r.kt)("p",null,"Note that Swagger stipulates that there can only be one ",(0,r.kt)("inlineCode",{parentName:"p"},"Body")," definition. If ",(0,r.kt)("inlineCode",{parentName:"p"},"@ApiBody")," is configured, the data extracted by the type will be automatically overwritten."),(0,r.kt)("p",null,"For example, in the following example, the type of ",(0,r.kt)("inlineCode",{parentName:"p"},"Body")," will be replaced with ",(0,r.kt)("inlineCode",{parentName:"p"},"Cat"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"@ApiBody({\n  type: Cat\n})\nasync upateUser(@Body() dto: UserDTO) {\n  // ...\n}\n")),(0,r.kt)("h3",{id:"file-upload-definition"},"File upload definition"),(0,r.kt)("p",null,"File upload is a special case in Post request."),(0,r.kt)("p",null,"You can implement multiple files and ",(0,r.kt)("inlineCode",{parentName:"p"},"Fields")," types by defining properties in DTO."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"import { ApiProperty, BodyContentType } from \"@midwayjs/swagger\";\n\nexport class CreateCatDto {\n  // ...\n  @ApiProperty({\n    type: 'array',\n    items: {\n      type: 'string',\n      format: 'binary',\n    }\n  })\n  files: any;\n}\n\n// ...\n\n@Post('/test1')\n@ApiBody({\n  contentType: BodyContentType.Multipart,\n  schema: {\n    type: CreateCatDto,\n  }\n})\nasync upload1(@Files() files, @Fields() fields) {\n  // ...\n}\n")),(0,r.kt)("p",null,"The Swagger UI shows:\n",(0,r.kt)("img",{parentName:"p",src:"https://img.alicdn.com/imgextra/i3/O1CN01w9dZxe1YQJv3uOycZ_!!6000000003053-0-tps-1524-1118.jpg",alt:"swagger6"})),(0,r.kt)("p",null,"If you don't need multiple files, use schema definition."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"export class CreateCatDto {\n  // ...\n  @ApiProperty({\n    type: 'string',\n    format: 'binary',\n  })\n  file: any;\n}\n")),(0,r.kt)("p",null,"The Swagger UI shows:"),(0,r.kt)("p",null,"Swagger UI \u4e2d\u5c55\u793a\uff1a\n",(0,r.kt)("img",{parentName:"p",src:"https://img.alicdn.com/imgextra/i3/O1CN01KlDHNt24mMglN1fyH_!!6000000007433-0-tps-1598-434.jpg",alt:"swagger4"})),(0,r.kt)("h3",{id:"request-header"},"Request Header"),(0,r.kt)("p",null,"The Header parameter is defined by the ",(0,r.kt)("inlineCode",{parentName:"p"},"@ApiHeader({...})")," decorator."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"@ApiHeader({\n  name: 'x-test-one',\n  description: 'this is test one'\n})\n@ApiTags(['hello'])\n@Controller('/hello')\nexport class HelloController {}\n")),(0,r.kt)("h3",{id:"request-response"},"Request Response"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"@ApiResponse({...})")," can be used to customize request Response."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"@Get('/:id')\n@ApiResponse({\n  status: 200\n  description: 'The found record',\n  type: Cat\n})\nfindOne(@Param('id') id: string, @Query('test') test: any): Cat {\n  return this.catsService.findOne(+id);\n}\n")),(0,r.kt)("p",null,"Other decorators that do not require status are also available:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"@ApiOkResponse()")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"@ApiCreatedResponse()")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"@ApiAcceptedResponse()")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"@ApiNoContentResponse()")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"@ApiMovedPermanentlyResponse()")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"@ApiBadRequestResponse()")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"@ApiUnauthorizedResponse()")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"@ApiNotFoundResponse()")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"@ApiForbiddenResponse()")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"@ApiMethodNotAllowedResponse()")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"@ApiNotAcceptableResponse()")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"@ApiRequestTimeoutResponse()")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"@ApiConflictResponse()")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"@ApiTooManyRequestsResponse()")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"@ApiGoneResponse()")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"@ApiPayloadTooLargeResponse()")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"@ApiUnsupportedMediaTypeResponse()")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"@ApiUnprocessableEntityResponse()")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"@ApiInternalServerErrorResponse()")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"@ApiNotImplementedResponse()")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"@ApiBadGatewayResponse()")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"@ApiServiceUnavailableResponse()")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"@ApiGatewayTimeoutResponse()")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"@ApiDefaultResponse()"))),(0,r.kt)("p",null,"The definition of the data model returned by the HTTP request can also be specified by specifying the type. Of course, this data model needs to describe each field through the decorator ",(0,r.kt)("inlineCode",{parentName:"p"},"@ApiProperty"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"import { ApiProperty } from '@midwayjs/swagger';\n\nexport class Cat {\n  @ApiProperty({ example: 'Kitty', description: 'The name of the Cat'})\n  name: string;\n\n  @ApiProperty({ example: 1, description: 'The age of the Cat' })\n  age: number;\n\n  @ApiProperty({\n    example: 'Maine Coon',\n    description: 'The breed of the Cat',\n  })\n  breed: string;\n}\n")),(0,r.kt)("p",null,"Swagger also supports extended fields with the prefix ",(0,r.kt)("inlineCode",{parentName:"p"},"x-"),", you can use the ",(0,r.kt)("inlineCode",{parentName:"p"},"@ApiExtension(x-..., {...})")," decorator."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"@ApiExtension('x-hello', { hello: 'world' })\n")),(0,r.kt)("p",null,"When you do not want to define the model type by type, we can add additional ",(0,r.kt)("inlineCode",{parentName:"p"},"schema")," type descriptions by adding ",(0,r.kt)("inlineCode",{parentName:"p"},"@ApiExtraModel")," to the Controller or Model Class."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"@ApiExtraModel(TestExtraModel)\n@Controller()\nclass HelloController {\n  @Post('/:id', { summary: 'test'})\n  @ApiResponse({\n    status: 200\n    content: {\n      'application/json ': {\n        schema: {\n          properties: {\n            data: { '$ref': getSchemaPath(TestExtraModel)}\n          }\n        }\n      }\n    }\n  })\n  async create(@Body() createCatDto: CreateCatDto, @Param('id') id: number): Promise<Cat> {\n    return this.catsService.create(createCatDto);\n  }\n}\n\n// or\n@ApiExtraModel(TestExtraModel)\nclass TestModel {\n  @ApiProperty({\n    item: {\n      $ref: getSchemaPath(TestExtraModel)\n    },\n    description: 'The name of the Catage'\n  })\n  one: TestExtraModel;\n}\n")),(0,r.kt)("h3",{id:"generic-returns-data"},"Generic returns data"),(0,r.kt)("p",null,"The Swagger itself does not support generic data. As a type of Typescript, generics will be erased during the build period and cannot be read at runtime."),(0,r.kt)("p",null,"We can define it in some trick ways."),(0,r.kt)("p",null,"For example, we need to add some common package structure to the return value."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"{\n  code: 200,\n  message: 'xxx',\n  data: any\n}\n")),(0,r.kt)("p",null,"To do this, we can write a method where the input parameter is the returned data and returns a wrapped class."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"import { Type } from '@midwayjs/swagger';\n\ntype Res<T> = {\n  code: number;\n  message: string;\n  data: T;\n}\n\nexport function SuccessWrapper<T>(ResourceCls: Type<T>): Type<Res<T>> {\n  class Successed {\n    @ApiProperty({ description: 'Status Code'})\n    code: number;\n\n    @ApiProperty({ description: 'message'})\n    message: string;\n\n    @ApiProperty({\n      type: ResourceCls\n    })\n    data: T;\n  }\n\n  return Successed;\n}\n")),(0,r.kt)("p",null,"We can implement our own return class based on this method."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"class ViewCat extends SuccessWrapper<Cat>(Cat) {}\n")),(0,r.kt)("p",null,"When using, you can directly specify this class."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"@Get('/:id')\n@ApiResponse({\n  status: 200\n  description: 'The found record',\n  type: ViewCat\n})\nasync findOne(@Param('id') id: string, @Query('test') test: any): ViewCat {\n  // ...\n}\n")),(0,r.kt)("h2",{id:"more-definition-examples"},"More definition examples"),(0,r.kt)("p",null,"There are more ways to write in Swagger, and the framework supports them. For more usage, please refer to our ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/midwayjs/midway/blob/main/packages/swagger/test/parser.test.ts"},"test case"),"."),(0,r.kt)("h2",{id:"advanced-usage"},"Advanced usage"),(0,r.kt)("h3",{id:"routing-label"},"Routing label"),(0,r.kt)("p",null,"Swagger labels paths. If no labels are defined in the Controller, they are grouped under default by default. Controller labels can be customized by ",(0,r.kt)("inlineCode",{parentName:"p"},"@ApiTags([...])"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"@ApiTags(['hello'])\n@Controller('/hello')\nexport class HelloController {}\n")),(0,r.kt)("p",null,"A description can be added to Tag through configuration."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"// src/config/config.default.ts\n\nexport default {\n  swagger: {\n    tags: [\n      {\n        name: 'api',\n        description: 'API Document'\n      },\n      {\n        name: 'hello',\n        description: 'Other Router'\n      },\n    ]\n  }\n}\n\n")),(0,r.kt)("p",null,"It can also be added to the routing method."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"// ...\nexport class HomeController {\n  @ApiTags(['bbb'])\n  @Get('/')\n  async home(@Body() dto?: Photo): Promise<string> {\n    return 'Hello Midwayjs!';\n  }\n}\n")),(0,r.kt)("h3",{id:"authorization-verification"},"Authorization verification"),(0,r.kt)("p",null,"You can add authorization and authentication configurations to configure authentication methods. You can configure ",(0,r.kt)("inlineCode",{parentName:"p"},"basic"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"bearer"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"cookie"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"oauth2"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"apikey"),", and ",(0,r.kt)("inlineCode",{parentName:"p"},"custom"),"."),(0,r.kt)("h4",{id:"basic"},"basic"),(0,r.kt)("p",null,"Enable basic authentication"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"// src/config/config.default.ts\nexport default {\n  // ...\n  swagger: {\n    auth: {\n      authType: 'basic',\n    },\n  },\n}\n")),(0,r.kt)("p",null,"Association Controller"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"@ApiBasicAuth()\n@Controller('/hello')\nexport class HelloController {}\n")),(0,r.kt)("h4",{id:"bearer"},(0,r.kt)("strong",{parentName:"h4"},"bearer")),(0,r.kt)("p",null,"\u542f\u7528 bearer \u9a8c\u8bc1\uff08bearerFormat \u4e3a JWT\uff09"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"// src/config/config.default.ts\nexport default {\n  // ...\n  swagger: {\n    auth: {\n      authType: 'bearer',\n    },\n  },\n}\n")),(0,r.kt)("p",null,"Association Controller"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"@ApiBearerAuth()\n@Controller('/hello')\nexport class HelloController {}\n")),(0,r.kt)("h4",{id:"oauth2"},"oauth2"),(0,r.kt)("p",null,"Enable oauth2 authentication"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"// src/config/config.default.ts\nexport default {\n  // ...\n  swagger: {\n    auth: {\n      authType: 'oauth2',\n      flows: {\n        implicit: {\n          authorizationUrl: 'http://example.org/api/oauth/dialog',\n          scopes: {\n            'write:pets': 'modify pets in your account',\n            'read:pets': 'read your pets'\n          }\n        },\n        authorizationCode: {\n          authorizationUrl: 'https://example.com/api/oauth/dialog',\n          tokenUrl: 'https://example.com/api/oauth/token',\n          scopes: {\n            'write:pets': 'modify pets in your account',\n            'read:pets': 'read your pets'\n          }\n        },\n      },\n    },\n  },\n}\n")),(0,r.kt)("p",null,"Association Controller"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"@ApiOAuth2()\n@Controller('/hello')\nexport class HelloController {}\n")),(0,r.kt)("h4",{id:"cookie"},"cookie"),(0,r.kt)("p",null,"Enable cookie authentication"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"// src/config/config.default.ts\nexport default {\n  // ...\n  swagger: {\n    auth: {\n      authType: 'cookie',\n      securityName: 'testforcookie',\n      cookieName: 'connect.sid',\n    },\n  },\n}\n")),(0,r.kt)("p",null,"Association Controller"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"@ApiCookieAuth('testforcookie')\n@Controller('/hello')\nexport class HelloController {}\n")),(0,r.kt)("h4",{id:"apikey"},"apikey"),(0,r.kt)("p",null,"Enable cookie authentication"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"// src/config/config.default.ts\nexport default {\n  // ...\n  swagger: {\n    auth: {\n      authType: 'apikey',\n        name: 'api_key'\n    },\n  },\n}\n")),(0,r.kt)("p",null,"Association Controller"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"@ApiSecurity('api_key')\n@Controller('/hello')\nexport class HelloController {}\n")),(0,r.kt)("h4",{id:"custom-verification"},"custom verification"),(0,r.kt)("p",null,"Custom verification method, you need to design your own parameter configuration."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"// src/config/config.default.ts\nexport default {\n  // ...\n  swagger: {\n    auth: {\n      authType: 'custom',\n      name: 'mycustom'\n      // ...\n    },\n  },\n}\n")),(0,r.kt)("p",null,"Association Controller"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"@ApiSecurity('mycustom')\n@Controller('/hello')\nexport class HelloController {}\n")),(0,r.kt)("h3",{id:"ignore-routing-verification"},"Ignore routing verification"),(0,r.kt)("p",null,"You can set ",(0,r.kt)("inlineCode",{parentName:"p"},"@ApiExcludeSecurity")," to ignore validation of a route."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"@Controller('/api')\n@ApiSecurity('api_key')\nclass APIController {\n  // ...\n\n  @Get('/get_user')\n  @ApiExcludeSecurity()\n  async getUser() {\n    // ...\n  }\n}\n")),(0,r.kt)("h3",{id:"ignore-routing"},"Ignore routing"),(0,r.kt)("p",null,"Configuring ",(0,r.kt)("inlineCode",{parentName:"p"},"@ApiExcludeController")," can ignore the entire Controller's routing."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"@ApiExcludeController()\n@Controller('/hello')\nexport class HelloController {}\n")),(0,r.kt)("p",null,"Configure ",(0,r.kt)("inlineCode",{parentName:"p"},"@ApiExcludeEndpoint")," to ignore individual routes."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"@Controller('/hello')\nexport class HelloController {\n  \n   @ApiExcludeEndpoint()\n   @Get()\n   async getUser() {\n     // ...\n   }\n}\n")),(0,r.kt)("p",null,"If you need to meet more dynamic scenarios, you can configure routing filters to filter in batches."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"// src/config/config.default.ts\nimport { RouterOption } from '@midwayjs/core';\n\nexport default {\n   // ...\n   swagger: {\n     routerFilter: (url: string, options: RouterOption) => {\n       return url === '/hello/getUser';\n     }\n   },\n}\n")),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"routerFilter")," is used to pass in a filter function, including ",(0,r.kt)("inlineCode",{parentName:"p"},"url")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"routerOptions")," two parameters. ",(0,r.kt)("inlineCode",{parentName:"p"},"routerOptions")," contains basic routing information."),(0,r.kt)("p",null,"Whenever a route is matched, the ",(0,r.kt)("inlineCode",{parentName:"p"},"routerFilter")," method will be automatically executed. When ",(0,r.kt)("inlineCode",{parentName:"p"},"routerFilter")," returns true, it means that this route will be filtered."),(0,r.kt)("h2",{id:"parameter-configuration"},"Parameter configuration"),(0,r.kt)("p",null,"Swagger components provide the same parameter configuration capability as the ",(0,r.kt)("a",{parentName:"p",href:"https://swagger.io/specification/"},"OpenAPI"),", which can be implemented through custom configuration."),(0,r.kt)("p",null,"The configuration items are as follows:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"/**\n * see https://swagger.io/specification/\n */\nexport interface SwaggerOptions {\n  /**\n   * default value: My Project\n   * https://swagger.io/specification/#info-object title field\n   */\n  title?: string;\n  /**\n   * default value: This is a swagger-ui for midwayjs project\n   * https://swagger.io/specification/#info-object description field\n   */\n  description?: string;\n  /**\n   * Default value: 1.0.0\n   * https://swagger.io/specification/#info-object version field\n   */\n  version?: string;\n  /**\n   * https://swagger.io/specification/#info-object contact field\n   */\n  contact?: ContactObject;\n  /**\n   * https://swagger.io/specification/#info-object license field\n   */\n  license?: LicenseObject;\n  /**\n   * https://swagger.io/specification/#info-object termsOfService field\n   */\n  termsOfService?: string;\n  /**\n   * https://swagger.io/specification/#openapi-object externalDocs field\n   */\n  externalDocs?: ExternalDocumentationObject;\n  /**\n   * https://swagger.io/specification/#openapi-object servers \u5b57\u6bb5\n   */\n  servers?: Array<ServerObject>;\n  /**\n   * https://swagger.io/specification/#openapi-object tags field\n   */\n  tags?: Array<TagObject>;\n  /**\n   * Please refer to the https://swagger.io/specification/#security-scheme-object\n   */\n  auth?: AuthOptions | AuthOptions[];\n  /**\n   * Default: /swagger-ui\n   * path to access swagger ui\n   */\n  swaggerPath?: string;\n  /**\n   * ascii sorting route tags\n   * You can use 1-xxx, 2-xxx, 3-xxx to define tag\n   */\n  tagSortable?: boolean;\n  /**\n   * Configuration Required in UI Display\n   * Please refer to the https://github.com/swagger-api/swagger-ui/blob/master/docs/usage/configuration.md#display\n   */\n  displayOptions ?: {\n    deepLinking?: boolean;\n    displayOperationId?: boolean;\n    defaultModelsExpandDepth?: number;\n    defaultModelExpandDepth?: number;\n    defaultModelRendering?: 'example' | 'model';\n    displayRequestDuration?: boolean;\n    docExpansion?: 'list' | 'full' | 'none';\n    filter?: boolean | string;\n    maxDisplayedTags?: number;\n    showExtensions?: boolean;\n    showCommonExtensions?: boolean;\n    useUnsafeMarkdown?: boolean;\n    tryItOutEnabled?: boolean;\n  };\n  \n  documentOptions?: {\n    /**\n     * Custom operationIdFactory for generating operationId\n     * @default () => controllerKey_webRouter.methodKey\n     */\n    operationIdFactory?: (\n      controllerKey: string,\n      webRouter: RouterOption\n    ) => string;\n  };\n}\n/**\n * Inherited from https://swagger.io/specification/#security-scheme-object\n */\nexport interface AuthOptions extends Omit<SecuritySchemeObject, 'type'> {\n  /**\n   * Type of verification right\n   * basic => http basic verification\n   * bear => http jwt verification\n   * cookie => cookie verification\n   * oauth2 => use oauth2\n   * apikey => apiKey\n   * custom => custom type\n   */\n  authType: AuthType;\n  /**\n   * https://swagger.io/specification/#security-scheme-object type field\n   */\n  type?: SecuritySchemeType;\n  /**\n   * authType = cookie can be modified by ApiCookie the name associated with the decorator\n   */\n  securityName?: string;\n  /**\n   * authType = cookie can be modified, cookie name\n   */\n  cookieName?: string;\n}\n")),(0,r.kt)("h2",{id:"decorator-list"},"Decorator list"),(0,r.kt)("p",null,"All decorators of the component refer to the design of ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/nestjs/swagger"},"@nestjs/swagger")," and are prefixed with ",(0,r.kt)("inlineCode",{parentName:"p"},"Api"),". All decorators are listed here:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Decorator"),(0,r.kt)("th",{parentName:"tr",align:null},"Support mode"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"@ApiBody")),(0,r.kt)("td",{parentName:"tr",align:null},"Method")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"@ApiExcludeEndpoint")),(0,r.kt)("td",{parentName:"tr",align:null},"Method")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"@ApiExcludeController")),(0,r.kt)("td",{parentName:"tr",align:null},"Controller")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"@ApiHeader")),(0,r.kt)("td",{parentName:"tr",align:null},"Controller/Method")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"@ApiHeaders")),(0,r.kt)("td",{parentName:"tr",align:null},"Controller/Method")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"@ApiOperation")),(0,r.kt)("td",{parentName:"tr",align:null},"Method")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"@ApiProperty")),(0,r.kt)("td",{parentName:"tr",align:null},"Model Property")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"@ApiPropertyOptional")),(0,r.kt)("td",{parentName:"tr",align:null},"Model Property")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"@ApiResponseProperty")),(0,r.kt)("td",{parentName:"tr",align:null},"Model Property")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"@ApiQuery")),(0,r.kt)("td",{parentName:"tr",align:null},"Method")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"@ApiResponse")),(0,r.kt)("td",{parentName:"tr",align:null},"Method")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"@ApiTags")),(0,r.kt)("td",{parentName:"tr",align:null},"Controller/Method")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"@ApiExtension")),(0,r.kt)("td",{parentName:"tr",align:null},"Method")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"@ApiBasicAuth")),(0,r.kt)("td",{parentName:"tr",align:null},"Controller")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"@ApiBearerAuth")),(0,r.kt)("td",{parentName:"tr",align:null},"Controller")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"@ApiCookieAuth")),(0,r.kt)("td",{parentName:"tr",align:null},"Controller")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"@ApiOAuth2")),(0,r.kt)("td",{parentName:"tr",align:null},"Controller")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"@ApiSecurity")),(0,r.kt)("td",{parentName:"tr",align:null},"Controller")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"@ApiExcludeSecurity")),(0,r.kt)("td",{parentName:"tr",align:null},"Method")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"@ApiParam")),(0,r.kt)("td",{parentName:"tr",align:null},"Method")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"@ApiExtraModel")),(0,r.kt)("td",{parentName:"tr",align:null},"Controller")))),(0,r.kt)("h2",{id:"ui-rendering"},"UI rendering"),(0,r.kt)("h3",{id:"rendering-from-swagger-ui-dist"},"Rendering from Swagger-ui-dist"),(0,r.kt)("p",null,"By default, if the ",(0,r.kt)("inlineCode",{parentName:"p"},"swagger-ui-dist")," package is installed, the component will call ",(0,r.kt)("inlineCode",{parentName:"p"},"renderSwaggerUIDist")," to render swagger ui by default. If you need to pass the options of swagger-ui, you can pass the ",(0,r.kt)("inlineCode",{parentName:"p"},"swaggerUIRenderOptions")," option."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"// src/config/config.default.ts\nimport { renderSwaggerUIDist } from '@midwayjs/swagger';\n\nexport default {\n   // ...\n   swagger: {\n     swaggerUIRender: renderSwaggerUIDist,\n     swaggerUIRenderOptions: {\n       // ...\n     }\n   },\n}\n")),(0,r.kt)("p",null,"If you want to adjust the UI configuration, you can replace the default ",(0,r.kt)("inlineCode",{parentName:"p"},"swagger-initializer.js")," with a custom file."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"// src/config/config.default.ts\nimport { AppInfo } from '@midwayjs/core';\nimport { renderSwaggerUIDist } from '@midwayjs/swagger';\nimport { join } from 'path';\n\nexport default (appInfo: AppInfo) {\n   return {\n     // ...\n     swagger: {\n       swaggerUIRender: renderSwaggerUIDist,\n       swaggerUIRenderOptions: {\n         customInitializer: join(appInfo.appDir, 'resource/swagger-initializer.js'),\n       }\n     },\n   }\n}\n")),(0,r.kt)("p",null,"The content of the customized ",(0,r.kt)("inlineCode",{parentName:"p"},"swagger-initializer.js")," is roughly as follows:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},'window.onload = function() {\n   window.ui = SwaggerUIBundle({\n     url: "/index.json",\n     dom_id: \'#swagger-ui\',\n     deepLinking: true,\n     presets: [\n       SwaggerUIBundle.presets.apis,\n       SwaggerUIStandalonePreset\n     ],\n     plugins: [\n       SwaggerUIBundle.plugins.DownloadUrl\n     ],\n     layout: "StandaloneLayout",\n     persistAuthorization: true,\n   });\n};\n\n')),(0,r.kt)("p",null,"The url points to the current swagger json and can be modified by yourself. For the complete ",(0,r.kt)("inlineCode",{parentName:"p"},"swagger-ui")," configuration, please refer to ","[here]","(",(0,r.kt)("a",{parentName:"p",href:"https://github.com/swagger-api/swagger-ui/blob/master/docs/usage"},"https://github.com/swagger-api/swagger-ui/blob/master/docs/usage")," /configuration.md)."),(0,r.kt)("h3",{id:"rendering-from-cdn-addresses-such-as-unpkg"},"Rendering from CDN addresses such as unpkg"),(0,r.kt)("p",null,"If the ",(0,r.kt)("inlineCode",{parentName:"p"},"swagger-ui-dist")," package is not installed, the ",(0,r.kt)("inlineCode",{parentName:"p"},"renderSwaggerUIRemote")," method is automatically used for rendering, and the cdn resource is provided by ",(0,r.kt)("inlineCode",{parentName:"p"},"unpkg.com")," by default."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"// src/config/config.default.ts\nimport { renderSwaggerUIRemote } from '@midwayjs/swagger';\n\nexport default {\n   // ...\n   swagger: {\n     swaggerUIRender: renderSwaggerUIRemote,\n     swaggerUIRenderOptions: {\n       // ...\n     }\n   },\n}\n")),(0,r.kt)("h3",{id:"only-swagger-json-is-provided"},"Only Swagger JSON is provided"),(0,r.kt)("p",null,"If you only want to provide Swagger JSON, you can configure ",(0,r.kt)("inlineCode",{parentName:"p"},"renderJSON")," to only render JSON without introducing the ",(0,r.kt)("inlineCode",{parentName:"p"},"swagger-ui-dist")," package."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"// src/config/config.default.ts\nimport { renderJSON } from '@midwayjs/swagger';\n\nexport default {\n   // ...\n   swagger: {\n     swaggerUIRender: renderJSON,\n   },\n}\n")),(0,r.kt)("h2",{id:"frequently-asked-questions"},"Frequently Asked Questions"),(0,r.kt)("h3",{id:"summary-or-description-in-route-annotations-such-as-get-do-not-take-effect"},(0,r.kt)("inlineCode",{parentName:"h3"},"summary")," or ",(0,r.kt)("inlineCode",{parentName:"h3"},"description")," in route annotations such as ",(0,r.kt)("inlineCode",{parentName:"h3"},"@Get")," do not take effect"),(0,r.kt)("p",null,"When there is an ",(0,r.kt)("inlineCode",{parentName:"p"},"@ApiOperation"),", the ",(0,r.kt)("inlineCode",{parentName:"p"},"summary")," or ",(0,r.kt)("inlineCode",{parentName:"p"},"description")," in the ",(0,r.kt)("inlineCode",{parentName:"p"},"@ApiOperation")," will be used first, so you only need to write one in routing annotations such as ",(0,r.kt)("inlineCode",{parentName:"p"},"@ApiOperation")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"@Get"),"."))}c.isMDXComponent=!0}}]);