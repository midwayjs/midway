"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[55291],{3905:(e,n,t)=>{t.d(n,{Zo:()=>s,kt:()=>h});var a=t(67294);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function r(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?r(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function c(e,n){if(null==e)return{};var t,a,i=function(e,n){if(null==e)return{};var t,a,i={},r=Object.keys(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var l=a.createContext({}),p=function(e){var n=a.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},s=function(e){var n=p(e.components);return a.createElement(l.Provider,{value:n},e.children)},d="mdxType",m={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},u=a.forwardRef((function(e,n){var t=e.components,i=e.mdxType,r=e.originalType,l=e.parentName,s=c(e,["components","mdxType","originalType","parentName"]),d=p(t),u=i,h=d["".concat(l,".").concat(u)]||d[u]||m[u]||r;return t?a.createElement(h,o(o({ref:n},s),{},{components:t})):a.createElement(h,o({ref:n},s))}));function h(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var r=t.length,o=new Array(r);o[0]=u;var c={};for(var l in n)hasOwnProperty.call(n,l)&&(c[l]=n[l]);c.originalType=e,c[d]="string"==typeof e?e:i,o[1]=c;for(var p=2;p<r;p++)o[p]=t[p];return a.createElement.apply(null,o)}return a.createElement.apply(null,t)}u.displayName="MDXCreateElement"},91998:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>m,frontMatter:()=>r,metadata:()=>c,toc:()=>p});var a=t(87462),i=(t(67294),t(3905));const r={},o="Captcha",c={unversionedId:"extensions/captcha",id:"extensions/captcha",title:"Captcha",description:"Universal captcha components for @midwayjs/faas , @midwayjs/web , @midwayjs/koa and @midwayjs/express frameworks, support image captcha, calculation expression and other types of verification codes.",source:"@site/i18n/en/docusaurus-plugin-content-docs/current/extensions/captcha.md",sourceDirName:"extensions",slug:"/extensions/captcha",permalink:"/en/docs/extensions/captcha",draft:!1,editUrl:"https://github.com/midwayjs/midway/tree/main/site/docs/extensions/captcha.md",tags:[],version:"current",frontMatter:{},sidebar:"component",previous:{title:"HTTP proxy",permalink:"/en/docs/extensions/http-proxy"},next:{title:"Tenant",permalink:"/en/docs/extensions/tenant"}},l={},p=[{value:"Install dependencies",id:"install-dependencies",level:2},{value:"Enable components",id:"enable-components",level:2},{value:"Call service",id:"call-service",level:2},{value:"Available configurations",id:"available-configurations",level:2},{value:"Configuration Example 1",id:"configuration-example-1",level:3},{value:"Configuration Example 2",id:"configuration-example-2",level:3},{value:"Component Dependency",id:"component-dependency",level:2},{value:"Effect",id:"effect",level:2}],s={toc:p},d="wrapper";function m(e){let{components:n,...t}=e;return(0,i.kt)(d,(0,a.Z)({},s,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"captcha"},"Captcha"),(0,i.kt)("p",null,"Universal captcha components for ",(0,i.kt)("inlineCode",{parentName:"p"},"@midwayjs/faas")," , ",(0,i.kt)("inlineCode",{parentName:"p"},"@midwayjs/web")," , ",(0,i.kt)("inlineCode",{parentName:"p"},"@midwayjs/koa")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"@midwayjs/express")," frameworks, support ",(0,i.kt)("inlineCode",{parentName:"p"},"image captcha"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"calculation expression")," and other types of verification codes."),(0,i.kt)("p",null,"You can also use this component to implement verification capabilities such as ",(0,i.kt)("inlineCode",{parentName:"p"},"SMS verification code"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"Email verification code"),", but note that this component itself does not contain the function of sending SMS messages and emails."),(0,i.kt)("p",null,"Related information:"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null},"Description"),(0,i.kt)("th",{parentName:"tr",align:null}))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"Can be used for standard projects"),(0,i.kt)("td",{parentName:"tr",align:null},"\u2705")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"Can be used for Serverless"),(0,i.kt)("td",{parentName:"tr",align:null},"\u2705")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"Can be used for integration"),(0,i.kt)("td",{parentName:"tr",align:null},"\u2705")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"Contains independent main framework"),(0,i.kt)("td",{parentName:"tr",align:null},"\u274c")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"Contains independent logs"),(0,i.kt)("td",{parentName:"tr",align:null},"\u274c")))),(0,i.kt)("h2",{id:"install-dependencies"},"Install dependencies"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"$ npm i @midwayjs/captcha@3 --save\n")),(0,i.kt)("p",null,"Or add the following dependencies in ",(0,i.kt)("inlineCode",{parentName:"p"},"package.json")," and reinstall."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "dependencies": {\n    "@midwayjs/captcha": "^3.0.0",\n    // ...\n  },\n}\n')),(0,i.kt)("h2",{id:"enable-components"},"Enable components"),(0,i.kt)("p",null,"Import components in ",(0,i.kt)("inlineCode",{parentName:"p"},"src/configuration.ts"),"."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-typescript"},"import * as captcha from '@midwayjs/captcha';\n\n@Configuration({\n  imports: [\n    // ...other components\n    captcha\n  ],\n})\nexport class MainConfiguration {}\n")),(0,i.kt)("h2",{id:"call-service"},"Call service"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-typescript"},"import { Controller, Inject } from '@midwayjs/core';\nimport { CaptchaService } from '@midwayjs/captcha';\n\n@Controller('/')\nexport class HomeController {\n  @Inject()\n  ctx;\n\n  @Inject()\n  captchaService: CaptchaService;\n\n  // Example: Get Image Captcha\n  @Get('/get-image-captcha')\n  async getImageCaptcha() {\n    const { id, imageBase64 } = await this.captchaService.image({ width: 120, height: 40 });\n    return {\n      id,          // verification code id\n      imageBase64, // The base64 data of the captcha SVG image can be directly put into the img tag of the front end\n    }\n  }\n\n  // Example: Get Calculation Expression Verification Code\n  @Get('/get-formula-captcha')\n  async getFormulaCaptcha() {\n    const { id, imageBase64 } = await this.captchaService.formula({ noise: 1 });\n    return {\n      id,          // verification code id\n      imageBase64, // The base64 data of the captcha SVG image can be directly put into the img tag of the front end\n    }\n  }\n\n  // Verify that the verification code is correct\n  @Post('/check-captcha')\n  async getCaptcha() {\n    const { id, answer } = this.ctx.request.body;\n    const passed: boolean = await this.captchaService.check(id, answer);\n    if (passed) {\n      return 'passed';\n    }\n    return 'error';\n  }\n\n  // Example: SMS verification code\n  @Post('/sms-code')\n  async sendSMSCode() {\n    // Verify that the verification code is correct\n    const { id, text: code } = await this.captchaService.text({ size: 4 });\n    await sendSMS(18888888888, code);\n    return { id }\n  }\n\n  // Example: Email verification code\n  @Post('/email-code')\n  async sendEmailCode() {\n    // Verify that the verification code is correct\n    const { id, text: code } = await this.captchaService.text({ type: 'number'});\n    await sendEmail('admin@example.com', code);\n    return { id }\n  }\n\n   // Example: Stuffing arbitrary text content into a captcha\n  @Get('/test-text')\n  async testText() {\n    // Save the content and get the verification code id\n    const id: string = await this.captchaService.set('123abc');\n    // According to the verification code id, verify whether the content is correct\n    const passed: boolean = await this.captchaService.check(id, '123abc');\n    return {\n      passed: passed === true,\n    }\n  }\n}\n")),(0,i.kt)("h2",{id:"available-configurations"},"Available configurations"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-typescript"},"interface CaptchaOptions {\n  default?: { // default config\n    // The number of interference lines, the default is 1\n    noise?: number;\n    // width, default is 120px\n    width?: number;\n    // width, default is 40px\n    height?: number;\n    // Graphic verification code configuration, the graphic contains some characters\n  },\n  image?: {\n    // Verification code character length, default 4 characters\n    size?: number;\n    // The character type in the image verification code, the default is 'mixed'\n    // - 'mixed' means 0-9, A-Z and a-z\n    // - 'letter' means A-Z and a-z\n    // - 'number' means 0-9\n    type?: 'mixed',\n    // The number of interference lines, the default is 1\n    noise?: number;\n    // width, default is 120px\n    width?: number;\n    // width, default is 40px\n    height?: number;\n  },\n  // Calculation formula verification code configuration, for example, the returned image content is 1+2, the user needs to fill in 3\n  formula?: {\n     // The number of interference lines, the default is 1\n    noise?: number;\n    // width, default is 120px\n    width?: number;\n    // width, default is 40px\n    height?: number;\n  },\n  // Plain text verification code configuration, based on the plain text verification code, SMS verification code and email verification code can be implemented\n  text?: {\n    // Verification code character length, default 4 characters\n    size?: number;\n    // The character type in the image verification code, the default is 'mixed'\n    // - 'mixed' means 0-9, A-Z and a-z\n    // - 'letter' means A-Z and a-z\n    // - 'number' means 0-9\n    type?: 'mixed',\n  },\n  // Verification code expiration time, the default is 1h\n  expirationTime?: 3600,\n  // key prefix stored in verification code\n  idPrefix: 'midway:vc',\n}\n\nexport const captcha: CaptchaOptions = {\n  default: { // default config\n    size: 4,\n    noise: 1,\n    width: 120,\n    height: 40,\n  },\n  image: { // Will merge default configuration\n    type: 'mixed',\n  },\n  formula: {}, // Will merge default configuration\n  text: {}, // Will merge default configuration\n  expirationTime: 3600,\n  idPrefix: 'midway:vc',\n}\n")),(0,i.kt)("h3",{id:"configuration-example-1"},"Configuration Example 1"),(0,i.kt)("p",null,"Get an image captcha code containing ",(0,i.kt)("inlineCode",{parentName:"p"},"5 pure English letters"),". The image's width  is ",(0,i.kt)("inlineCode",{parentName:"p"},"200")," pixels, the height is ",(0,i.kt)("inlineCode",{parentName:"p"},"50")," pixels, and it contains ",(0,i.kt)("inlineCode",{parentName:"p"},"3")," noise lines."),(0,i.kt)("p",null,"Because the configuration of the image captcha code(",(0,i.kt)("inlineCode",{parentName:"p"},"image"),") will be merged with the ",(0,i.kt)("inlineCode",{parentName:"p"},"default")," configuration, so you can only modify the ",(0,i.kt)("inlineCode",{parentName:"p"},"default")," configuration:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-typescript"},"export const captcha: CaptchaOptions = {\n  default: {\n    size: 5,\n    noise: 3,\n    width: 200,\n    height: 50\n  },\n  image: {\n    type: 'letter'\n  }\n}\n")),(0,i.kt)("p",null,"Of course, you can also configure the width, height, etc. in the ",(0,i.kt)("inlineCode",{parentName:"p"},"image")," configuration, ",(0,i.kt)("inlineCode",{parentName:"p"},"without")," modifying the default configuration to achieve the ",(0,i.kt)("inlineCode",{parentName:"p"},"same")," effect\uff1a"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-typescript"},"export const captcha: CaptchaOptions = {\n  image: {\n    size: 5,\n    noise: 3,\n    width: 200,\n    height: 50\n    type: 'letter'\n  }\n}\n")),(0,i.kt)("h3",{id:"configuration-example-2"},"Configuration Example 2"),(0,i.kt)("p",null,"Get a formula captcha code, which width  is ",(0,i.kt)("inlineCode",{parentName:"p"},"100")," pixels, the height is ",(0,i.kt)("inlineCode",{parentName:"p"},"60")," pixels, and it contains ",(0,i.kt)("inlineCode",{parentName:"p"},"2")," noise lines."),(0,i.kt)("p",null,"Because the configuration of the formula captcha codewill be merged with the ",(0,i.kt)("inlineCode",{parentName:"p"},"default")," configuration, so you can only modify the ",(0,i.kt)("inlineCode",{parentName:"p"},"default")," configuration:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-typescript"},"export const captcha: CaptchaOptions = {\n  default: {\n    noise: 2,\n    width: 100,\n    height: 60\n  },\n}\n")),(0,i.kt)("p",null,"Of course, you can also configure the width, height, etc. in the ",(0,i.kt)("inlineCode",{parentName:"p"},"formula")," configuration, ",(0,i.kt)("inlineCode",{parentName:"p"},"without")," modifying the default configuration to achieve the ",(0,i.kt)("inlineCode",{parentName:"p"},"same")," effect:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-typescript"},"export const captcha: CaptchaOptions = {\n  formula: {\n    noise: 2,\n    width: 100,\n    height: 60\n  }\n}\n")),(0,i.kt)("h2",{id:"component-dependency"},"Component Dependency"),(0,i.kt)("p",null,"The content storage of the verification code is based on the '@ midwayjs/cache-manager' component. By default, a cache instance named 'captcha' is created and the data is stored in 'memory."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-typescript"},"export default {\n  cacheManager: {\n    clients: {\n      captcha: {\n        store: 'memory',\n      },\n    },\n  },\n};\n")),(0,i.kt)("p",null,"If you want to replace it with 'redis' or other services, please refer to the ",(0,i.kt)("a",{parentName:"p",href:"/docs/extensions/caching"},"documentation")," of ",(0,i.kt)("inlineCode",{parentName:"p"},"@midwayjs/cache-manager")," to configure the cache."),(0,i.kt)("h2",{id:"effect"},"Effect"),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Picture verification code")),(0,i.kt)("p",null,(0,i.kt)("img",{parentName:"p",src:"https://gw.alicdn.com/imgextra/i4/O1CN014cEzLH23vEniOgoyp_!!6000000007317-2-tps-120-40.png",alt:"\u56fe\u7247\u9a8c\u8bc1\u7801"})),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Calculation expression")),(0,i.kt)("p",null," ",(0,i.kt)("img",{parentName:"p",src:"https://gw.alicdn.com/imgextra/i4/O1CN01u3Mj0q24lRx1md9pX_!!6000000007431-2-tps-120-40.png",alt:"\u8ba1\u7b97\u8868\u8fbe\u5f0f"})))}m.isMDXComponent=!0}}]);